var searchIndex = {};
searchIndex['encryptfile'] = {"items":[[0,"","encryptfile","This library provides an interface to Rust Crypto([1]) for encrypting and decrypting files.\nIt provides the following features:",null,null],[3,"Config","","The main Configuration type.  This is a Builder object [1].",null,null],[3,"ScryptR","","The Scrypt R parameter.",null,null],[3,"ScryptP","","The Scrypt P parameter.",null,null],[3,"ScryptLogN","","The Scrypt LogN parameter.",null,null],[4,"PasswordType","","Specifies the encryption password.",null,null],[13,"Unknown","","",0,null],[13,"Text","","Use the specified text string and PasswordKeyGenMethod.\nLeading/trailing whitespace is not trimmed on the string.  Consider specifying\nsalt via `Config.salt()`.",0,null],[13,"Func","","Use the specified function to provide the key.",0,null],[4,"PasswordKeyGenMethod","","Controls how the encryption key is generated from a text password.",null,null],[13,"Scrypt","","Use the scrypt algorithm.\nhttp://www.tarsnap.com/scrypt/scrypt-slides.pdf",1,null],[13,"ReadFromFile","","Read the key parameters from the file.  This is valid for\ndecryption only, and only if `OutputOption::IncludeKeyMetadata`\nwas used when encrypting the file.",1,null],[4,"InitializationVector","","Specifies the initialization vector.  Note, when decrypting, you do not need to specify\nthis since the IV is in the file.",null,null],[13,"Unknown","","",2,null],[13,"GenerateFromRng","","Generate the vector randomly.  See `RngMode`.",2,null],[13,"Func","","Use the specified function to provide the IV.  It should return a fully populated IV\narray.",2,null],[4,"RngMode","","Controls how random numbers are generated whenever they are needed by this library.\nCurrently this is only required when generating an initialization vector\n(`InitializationVector::GenerateFromRng`).  Note, when decrypting, you do not need\nto specify this.",null,null],[13,"Os","","Use the [Os RNG](https://doc.rust-lang.org/rand/rand/os/struct.OsRng.html) only",3,null],[13,"OsIssac","","Use a combination of the Os and\n[Isaac64](https://doc.rust-lang.org/rand/rand/isaac/struct.Isaac64Rng.html) generators.\nIsaac is seeded with the Os RNG,\nand the two RNGs are used to generate the resulting IV 50/50.",3,null],[13,"OsRandIssac","","Use a combination of the Os,\n[`rand::random`](https://doc.rust-lang.org/rand/rand/fn.random.html), and Isaac.\nIsaac is seeded with the Os Rng\nand rand.  Os and Isaac are used to generate the resulting IV 50/50.",3,null],[13,"Func","","Use the specified function to generate random u8 values.  The function should return a\nrandom u8 each time it is called.",3,null],[4,"InputStream","","Data input streams.",null,null],[13,"Unknown","","",4,null],[13,"File","","Read from the specified file.",4,null],[4,"Mode","","The current encryption mode.  Initially set to Unknown.",null,null],[13,"Unknown","","",5,null],[13,"Encrypt","","",5,null],[13,"Decrypt","","",5,null],[4,"OutputStream","","Data output streams.",null,null],[13,"Unknown","","",6,null],[13,"File","","Write to the specified file.",6,null],[4,"OutputOption","","Output options.",null,null],[13,"AllowOverwrite","","If the output file exists and this is set, it will be overwritten.  If this is NOT set\nand the file exists, encryption/decryption will return an error.",7,null],[13,"IncludeKeyMetadata","","Controls whether metadata about the generated key is included (as cleartext)\nin the output file.\nFor example, if scrypt is used, the metadata contains the Log(N),R,and P\nparameters vaues that were provided to scrypt to\ngenerate the key.  The metadata does not include the\noriginal password text or salt.",7,null],[4,"EncryptError","","",null,null],[13,"ValidateFailed","","",8,null],[13,"OsRngFailed","","",8,null],[13,"OutputFileExists","","",8,null],[13,"PwKeyIsZeroed","","",8,null],[13,"IvIsZeroed","","",8,null],[13,"IvEqualsCheckValue","","",8,null],[13,"HeaderTooSmall","","",8,null],[13,"ShortIvRead","","",8,null],[13,"ShortHmacRead","","",8,null],[13,"BadHeaderMagic","","",8,null],[13,"UnexpectedVersion","","",8,null],[13,"InvalidHmacLength","","",8,null],[13,"HmacMismatch","","",8,null],[13,"InvalidPasswordGenMethod","","",8,null],[13,"InvalidKeyMetadataType","","",8,null],[13,"UnexpectedEnumVariant","","",8,null],[13,"NoKeyMetadataFound","","",8,null],[13,"ByteOrderError","","",8,null],[13,"IoError","","",8,null],[13,"CryptoError","","",8,null],[13,"InternalError","","",8,null],[5,"scrypt_defaults","","Returns a set of default scrypt parameters: LogN 16, R 8, P 1.\nSee http://www.tarsnap.com/scrypt/scrypt-slides.pdf for more details.",null,{"inputs":[],"output":{"name":"passwordkeygenmethod"}}],[5,"scrypt_params_encrypt1","","Returns a set of scrypt parameters tuned for file encryption: LogN 20, R 8, P 1\nSee http://www.tarsnap.com/scrypt/scrypt-slides.pdf for more details.",null,{"inputs":[],"output":{"name":"passwordkeygenmethod"}}],[5,"process","","Process the config and produce the result.  This function does not \"consume\" the config,\nso it can be reconfigured and reused after `process()` returns.",null,{"inputs":[{"name":"config"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"mode"}],"output":{"name":"mode"}}],[11,"hash","","",7,null],[11,"eq","","",7,{"inputs":[{"name":"outputoption"},{"name":"outputoption"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"outputoption"},{"name":"outputoption"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"outputoption"}],"output":{"name":"outputoption"}}],[11,"clone","","",4,{"inputs":[{"name":"inputstream"}],"output":{"name":"inputstream"}}],[11,"clone","","",6,{"inputs":[{"name":"outputstream"}],"output":{"name":"outputstream"}}],[11,"clone","","",3,{"inputs":[{"name":"rngmode"}],"output":{"name":"rngmode"}}],[11,"clone","","",2,{"inputs":[{"name":"initializationvector"}],"output":{"name":"initializationvector"}}],[11,"clone","","",9,{"inputs":[{"name":"scryptlogn"}],"output":{"name":"scryptlogn"}}],[11,"clone","","",10,{"inputs":[{"name":"scryptr"}],"output":{"name":"scryptr"}}],[11,"clone","","",11,{"inputs":[{"name":"scryptp"}],"output":{"name":"scryptp"}}],[11,"clone","","",1,{"inputs":[{"name":"passwordkeygenmethod"}],"output":{"name":"passwordkeygenmethod"}}],[11,"clone","","",0,{"inputs":[{"name":"passwordtype"}],"output":{"name":"passwordtype"}}],[11,"clone","","",12,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"new","","Constructs a new Config with default settings.  At a minimum, you must set input\nstreams and a password method, and configure it for encryption or decryption.",12,{"inputs":[{"name":"config"}],"output":{"name":"self"}}],[11,"decrypt","","Enable decryption mode.",12,{"inputs":[{"name":"config"}],"output":{"name":"self"}}],[11,"encrypt","","Enable encryption mode.",12,{"inputs":[{"name":"config"}],"output":{"name":"self"}}],[11,"input_stream","","Set the input stream.",12,{"inputs":[{"name":"config"},{"name":"inputstream"}],"output":{"name":"self"}}],[11,"output_stream","","Set the output stream.",12,{"inputs":[{"name":"config"},{"name":"outputstream"}],"output":{"name":"self"}}],[11,"output_options","","Set output options.",12,{"inputs":[{"name":"config"},{"name":"hashset"}],"output":{"name":"self"}}],[11,"add_output_option","","Add an output option.",12,{"inputs":[{"name":"config"},{"name":"outputoption"}],"output":{"name":"self"}}],[11,"remove_output_option","","Remove an output option.",12,{"inputs":[{"name":"config"},{"name":"outputoption"}],"output":{"name":"self"}}],[11,"rng_mode","","Set the random number mode.  See the `RngMode` enum for information\non how this is used.",12,{"inputs":[{"name":"config"},{"name":"rngmode"}],"output":{"name":"self"}}],[11,"initialization_vector","","Set the method of determining the initialization vector.",12,{"inputs":[{"name":"config"},{"name":"initializationvector"}],"output":{"name":"self"}}],[11,"password","","Set the password method.  Also clears the derived key.",12,{"inputs":[{"name":"config"},{"name":"passwordtype"}],"output":{"name":"self"}}],[11,"salt","","Set the salt.  Only used in password methods that require it; if not set,\ndefaults to \"DefaultSalt\".",12,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"self"}}],[11,"encryption_method","","Set the encryption method.",12,{"inputs":[{"name":"config"},{"name":"encryptionmethod"}],"output":{"name":"self"}}],[11,"buffer_size","","Set the buffer size used for encryption and decryption.  Default is 65536 bytes.",12,{"inputs":[{"name":"config"},{"name":"usize"}],"output":{"name":"self"}}],[11,"derive_key","","Derive the encryption key.  The key is returned and is also\ncached on this object (accessible via `get_derived_key()`).  See that function\nfor details on how long this cached version persists.",12,{"inputs":[{"name":"config"}],"output":{"name":"result"}}],[11,"validate","","Validate the encryption object; it is not necessary to call this manually since the\nconfiguration will be validated when it is used.",12,{"inputs":[{"name":"config"}],"output":{"name":"result"}}],[11,"get_mode","","",12,{"inputs":[{"name":"config"}],"output":{"name":"mode"}}],[11,"get_input_stream","","",12,{"inputs":[{"name":"config"}],"output":{"name":"inputstream"}}],[11,"get_output_stream","","",12,{"inputs":[{"name":"config"}],"output":{"name":"outputstream"}}],[11,"get_output_format","","",12,{"inputs":[{"name":"config"}],"output":{"name":"outputformat"}}],[11,"get_output_options","","",12,{"inputs":[{"name":"config"}],"output":{"name":"hashset"}}],[11,"get_rng_mode","","",12,{"inputs":[{"name":"config"}],"output":{"name":"rngmode"}}],[11,"get_initialization_vector","","",12,{"inputs":[{"name":"config"}],"output":{"name":"initializationvector"}}],[11,"get_password","","",12,{"inputs":[{"name":"config"}],"output":{"name":"passwordtype"}}],[11,"get_salt","","",12,{"inputs":[{"name":"config"}],"output":{"name":"str"}}],[11,"get_encryption_method","","",12,{"inputs":[{"name":"config"}],"output":{"name":"encryptionmethod"}}],[11,"get_buffer_size","","",12,{"inputs":[{"name":"config"}],"output":{"name":"usize"}}],[11,"get_derived_key","","If `derive_key()` has been called, returns the derived encryption key.  Otherwise returns\nNone.  Each time `password()` is called, the derived key will be reset to None.",12,{"inputs":[{"name":"config"}],"output":{"name":"option"}}],[6,"PwKeyArray","","",null,null],[6,"IvArray","","",null,null],[17,"PW_KEY_SIZE","","",null,null],[17,"IV_SIZE","","",null,null],[11,"fmt","","",8,{"inputs":[{"name":"encrypterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",8,{"inputs":[{"name":"encrypterror"},{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",8,{"inputs":[{"name":"encrypterror"},{"name":"error"}],"output":{"name":"self"}}]],"paths":[[4,"PasswordType"],[4,"PasswordKeyGenMethod"],[4,"InitializationVector"],[4,"RngMode"],[4,"InputStream"],[4,"Mode"],[4,"OutputStream"],[4,"OutputOption"],[4,"EncryptError"],[3,"ScryptLogN"],[3,"ScryptR"],[3,"ScryptP"],[3,"Config"]]};
initSearch(searchIndex);
